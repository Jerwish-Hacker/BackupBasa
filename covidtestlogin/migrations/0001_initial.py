# Generated by Django 3.1.5 on 2022-09-05 08:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CovidBooster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Position ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('shot_one', models.DateField(blank=True, null=True, verbose_name='Shot One')),
                ('shot_two', models.DateField(blank=True, null=True, verbose_name='Shot Two')),
                ('booster_one', models.DateField(blank=True, null=True, verbose_name='Booster One')),
                ('date_eligible_for_booster', models.DateField(blank=True, null=True, verbose_name='Date Eligible for Booster')),
                ('dead_line', models.DateField(blank=True, null=True, verbose_name='Dead Line')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('position_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Position Status')),
                ('job_title_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Job Title Code')),
                ('job_title_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Job Title Description')),
                ('home_department_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Home Department Description')),
                ('location_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Location Description')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region')),
                ('worker_category_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Worker Category Description')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Hire Date')),
                ('rehire_date', models.DateField(blank=True, null=True, verbose_name='Rehire Date')),
                ('flsa_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='FLSA Description')),
                ('reports_to', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reports To')),
                ('job_function_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Job Function Description')),
                ('email', models.CharField(blank=True, max_length=150, null=True, verbose_name='Email')),
                ('pay_rule', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pay Rule')),
                ('position_start_date', models.DateField(blank=True, null=True, verbose_name='Position Start Date')),
                ('personal_mobile', models.CharField(blank=True, max_length=50, null=True, verbose_name='Personal Mobile')),
                ('home_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Home Phone')),
                ('file_1', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 1')),
                ('file_1_status', models.BooleanField(blank=True, null=True, verbose_name='File 1 Status')),
                ('signature', models.TextField(blank=True, null=True, verbose_name='Signature')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('verified_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Verified By')),
                ('shot_one_added_by_emp', models.DateField(blank=True, null=True, verbose_name='Shot One Added By Employee')),
                ('shot_two_added_by_emp', models.DateField(blank=True, null=True, verbose_name='Shot Two Added By Employee')),
                ('shot_three_added_by_emp', models.DateField(blank=True, null=True, verbose_name='Shot Three Added By Employee')),
                ('exemption_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Exemption Type')),
                ('religious_exemption_text', models.TextField(blank=True, null=True, verbose_name='Religious Exemption Text')),
                ('employee_submission_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Employee Submission Datetime')),
                ('employee_submitted_option', models.CharField(blank=True, max_length=50, null=True, verbose_name='Employee Submitted Option')),
                ('forced_move_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Forced Move Status')),
                ('vaccine_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vaccine Type')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'CovidBooster',
                'verbose_name_plural': 'CovidBooster',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position ID')),
                ('reports_to_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reports To Name')),
                ('payroll_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Payroll Name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('position_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position Status')),
                ('worker_category_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Worker Category Description')),
                ('job_title_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Job Title Description')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Hire Date')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region')),
                ('eeo_establishment', models.CharField(blank=True, max_length=100, null=True, verbose_name='EEO Establishment')),
                ('job_function_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Job Function Description')),
                ('home_department_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Home Department Description')),
                ('union_code_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Union Code Description')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('is_proof_or_vaccination_copy_provided', models.BooleanField(blank=True, null=True, verbose_name='Is Proof Or Vaccination Copy Provided?')),
                ('allow_csv_to_pull_record', models.BooleanField(blank=True, null=True, verbose_name='Allow CSV To Pull EPIC Medical Record Or CAIR record')),
                ('allow_csv_to_pull_record_verified', models.BooleanField(blank=True, null=True, verbose_name='Allow CSV To Pull Record Verified?')),
                ('is_vaccine_declined', models.BooleanField(blank=True, null=True, verbose_name='Vaccination Declined?')),
                ('file_1', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 1')),
                ('file_1_status', models.BooleanField(blank=True, null=True, verbose_name='File 1 Status')),
                ('file_2', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 2')),
                ('file_2_status', models.BooleanField(blank=True, null=True, verbose_name='File 2 Status')),
                ('file_3', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 3')),
                ('file_3_status', models.BooleanField(blank=True, null=True, verbose_name='File 3 Status')),
                ('file_4', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 4')),
                ('file_4_status', models.BooleanField(blank=True, null=True, verbose_name='File 4 Status')),
                ('file_5', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 5')),
                ('file_5_status', models.BooleanField(blank=True, null=True, verbose_name='File 5 Status')),
                ('file_6', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 6')),
                ('file_6_status', models.BooleanField(blank=True, null=True, verbose_name='File 6 Status')),
                ('file_7', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 7')),
                ('file_7_status', models.BooleanField(blank=True, null=True, verbose_name='File 7 Status')),
                ('signature_data', models.TextField(blank=True, null=True, verbose_name='Signature')),
                ('user_submission_datetime', models.DateTimeField(blank=True, null=True, verbose_name='User Submission Date Time')),
                ('epic_medical_second_dose_date', models.DateField(blank=True, null=True, verbose_name='Epic Medical Second Dose Date')),
                ('epic_medical_fully_vaccinated_test_until_date', models.DateField(blank=True, null=True, verbose_name='Epic Medical Fully Vaccinated Test Unitl')),
                ('epic_medical_loa_until', models.DateField(blank=True, null=True, verbose_name='Epic Medical LOA Until')),
                ('is_deleted', models.BooleanField(blank=True, null=True, verbose_name='Is Deleted')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='OTPTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Member ID')),
                ('otp', models.CharField(blank=True, max_length=100, null=True, verbose_name='OTP')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'OTP',
                'verbose_name_plural': 'OTP',
            },
        ),
        migrations.CreateModel(
            name='VaccineExemption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_exemption', models.CharField(blank=True, max_length=50, null=True, verbose_name='Type of Exemption')),
                ('file_1', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 1')),
                ('file_1_status', models.BooleanField(blank=True, null=True, verbose_name='File 1 Status')),
                ('file_2', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 2')),
                ('file_2_status', models.BooleanField(blank=True, null=True, verbose_name='File 2 Status')),
                ('file_3', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 3')),
                ('file_3_status', models.BooleanField(blank=True, null=True, verbose_name='File 3 Status')),
                ('file_4', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 4')),
                ('file_4_status', models.BooleanField(blank=True, null=True, verbose_name='File 4 Status')),
                ('file_5', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 5')),
                ('file_5_status', models.BooleanField(blank=True, null=True, verbose_name='File 5 Status')),
                ('file_6', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 6')),
                ('file_6_status', models.BooleanField(blank=True, null=True, verbose_name='File 6 Status')),
                ('file_7', models.FileField(blank=True, null=True, upload_to='media/uploads/na3ohXaeOhleeng7/', verbose_name='File 7')),
                ('file_7_status', models.BooleanField(blank=True, null=True, verbose_name='File 7 Status')),
                ('signature', models.TextField(blank=True, null=True, verbose_name='Signature')),
                ('religious_exemption_text', models.TextField(blank=True, null=True, verbose_name='Religious Exemption Text')),
                ('staff', models.CharField(blank=True, max_length=100, null=True, verbose_name='Staff')),
                ('reviewed_date', models.DateField(blank=True, null=True, verbose_name='Reviewed Date')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='covidtestlogin.employee')),
            ],
            options={
                'verbose_name': 'VaccineExemption',
                'verbose_name_plural': 'VaccineExemptions',
            },
        ),
        migrations.CreateModel(
            name='CovidWeeklyEmployeeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('pto_date', models.DateField(blank=True, null=True, verbose_name='PTO Date')),
                ('skip', models.BooleanField(blank=True, null=True, verbose_name='Is Skipped this Week')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='covidtestlogin.employee')),
            ],
            options={
                'verbose_name': 'CovidWeeklyEmployeeList',
                'verbose_name_plural': 'CovidWeeklyEmployeeList',
            },
        ),
        migrations.CreateModel(
            name='CovidTesting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, null=True, verbose_name='Test Date')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('delayed', models.CharField(blank=True, max_length=10, null=True, verbose_name='Delayed')),
                ('is_tested', models.BooleanField(blank=True, null=True, verbose_name='Is Tested')),
                ('test_result', models.CharField(blank=True, max_length=100, null=True, verbose_name='Test Result')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('staff', models.CharField(blank=True, max_length=100, null=True, verbose_name='Staff')),
                ('pto_count', models.IntegerField(blank=True, null=True, verbose_name='PTO Count')),
                ('skip', models.BooleanField(blank=True, null=True, verbose_name='is Skipped')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='covidtestlogin.employee')),
            ],
            options={
                'verbose_name': 'CovidTest',
                'verbose_name_plural': 'CovidTests',
            },
        ),
        migrations.CreateModel(
            name='CovidBoosterWeeklyEmployeeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('pto_date', models.DateField(blank=True, null=True, verbose_name='PTO Date')),
                ('skip', models.BooleanField(blank=True, null=True, verbose_name='Is Skipped this Week')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='covidtestlogin.covidbooster')),
            ],
            options={
                'verbose_name': 'CovidBoosterWeeklyEmployeeList',
                'verbose_name_plural': 'CovidBoosterWeeklyEmployeeList',
            },
        ),
        migrations.CreateModel(
            name='CovidBoosterTesting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField(blank=True, null=True, verbose_name='Test Date')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('delayed', models.CharField(blank=True, max_length=10, null=True, verbose_name='Delayed')),
                ('is_tested', models.BooleanField(blank=True, null=True, verbose_name='Is Tested')),
                ('test_result', models.CharField(blank=True, max_length=100, null=True, verbose_name='Test Result')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('staff', models.CharField(blank=True, max_length=100, null=True, verbose_name='Staff')),
                ('pto_count', models.IntegerField(blank=True, null=True, verbose_name='PTO Count')),
                ('skip', models.BooleanField(blank=True, null=True, verbose_name='is Skipped')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('modified_datetime', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='covidtestlogin.covidbooster')),
            ],
            options={
                'verbose_name': 'CovidBoosterTest',
                'verbose_name_plural': 'CovidBoosterTests',
            },
        ),
    ]
